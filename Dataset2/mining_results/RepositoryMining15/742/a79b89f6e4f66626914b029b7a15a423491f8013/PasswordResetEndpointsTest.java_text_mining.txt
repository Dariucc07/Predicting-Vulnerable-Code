{'package': 1, 'org': 24, 'cloudfoundry': 8, 'identity': 8, 'uaa': 8, 'scim': 3, 'endpoints': 1, 'import': 25, 'TestClassNullifier': 2, 'authentication': 1, 'Origin': 8, 'codestore': 2, 'ExpiringCode': 4, 'ExpiringCodeStore': 3, 'ScimUser': 17, 'ScimUserProvisioning': 3, 'test': 8, 'MockAuthentication': 4, 'codehaus': 1, 'jackson': 1, 'map': 1, 'ObjectMapper': 2, 'junit': 2, 'Before': 2, 'Test': 9, 'mockito': 3, 'Mockito': 20, 'springframework': 9, 'security': 1, 'core': 1, 'context': 1, 'SecurityContextHolder': 4, 'web': 7, 'servlet': 7, 'MockMvc': 2, 'request': 2, 'MockHttpServletRequestBuilder': 9, 'setup': 1, 'MockMvcBuilders': 2, 'java': 2, 'sql': 1, 'Timestamp': 5, 'util': 1, 'Arrays': 9, 'static': 8, 'hamcrest': 1, 'Matchers': 3, 'containsString': 6, 'any': 2, 'eq': 4, 'http': 1, 'MediaType': 1, 'MockMvcRequestBuilders': 1, 'post': 28, 'result': 3, 'MockMvcResultMatchers': 3, 'content': 15, 'jsonPath': 7, 'status': 10, 'public': 10, 'class': 4, 'PasswordResetEndpointsTest': 1, 'extends': 1, 'private': 3, 'mockMvc': 11, 'scimUserProvisioning': 17, 'expiringCodeStore': 6, 'void': 9, 'setUp': 1, 'throws': 9, 'Exception': 9, 'mock': 2, 'PasswordResetEndpoints': 2, 'controller': 2, 'new': 17, 'standaloneSetup': 1, 'build': 1, 'when': 13, 'generateCode': 1, 'thenReturn': 13, 'System': 3, 'currentTimeMillis': 3, 'testCreatingAPasswordResetWhenTheUsernameExists': 1, 'user': 45, 'example': 30, 'com': 30, 'null': 10, 'addEmail': 6, 'query': 8, 'UAA': 5, 'asList': 8, 'contentType': 9, 'accept': 9, 'perform': 9, 'andExpect': 20, 'isCreated': 2, 'string': 5, 'code': 5, 'testCreatingAPasswordResetWhenTheUserDoesNotExist': 1, 'isNotFound': 1, 'testCreatingAPasswordResetWhenTheUserHasNonUaaOrigin': 1, 'setOrigin': 2, 'LDAP': 2, 'isConflict': 2, 'testCreatingAPasswordResetWithAUsernameContainingSpecialCharacters': 1, 'and': 2, 'origin': 2, 'testChangingAPasswordWithAValidCode': 1, 'retrieveCode': 2, 'scimUser': 8, 'retrieve': 2, 'getContext': 3, 'setAuthentication': 3, 'isOk': 3, 'value': 6, 'username': 5, 'verify': 4, 'changePassword': 3, 'testChangingAPasswordForUnverifiedUser': 1, 'setVerified': 1, 'false': 1, 'verifyUser': 1, 'getId': 1, 'testChangingAPasswordWithAUsernameAndPassword': 1, 'secret': 2, 'testChangingAPasswordWithABadRequest': 1, 'isBadRequest': 1}